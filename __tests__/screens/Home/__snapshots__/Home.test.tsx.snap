// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Screen should matches the snapshot 1`] = `
<RCTSafeAreaView>
  <TextInput
    onChangeText={[Function]}
    placeholder="Search title"
    style={
      {
        "borderWidth": 1,
        "height": 40,
        "marginBottom": 20,
        "marginHorizontal": 12,
        "padding": 10,
      }
    }
    testID="search"
    value=""
  />
  <View
    style={
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "borderRadius": 5,
            "marginHorizontal": 10,
            "padding": 15,
          },
          {
            "backgroundColor": "white",
          },
        ]
      }
      testID="selection-Pending"
    >
      <Text
        style={
          {
            "color": "black",
            "fontSize": 18,
          }
        }
      >
        Pending
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "borderRadius": 5,
            "marginHorizontal": 10,
            "padding": 15,
          },
          {
            "backgroundColor": "white",
          },
        ]
      }
      testID="selection-In Progress"
    >
      <Text
        style={
          {
            "color": "black",
            "fontSize": 18,
          }
        }
      >
        In Progress
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "borderRadius": 5,
            "marginHorizontal": 10,
            "padding": 15,
          },
          {
            "backgroundColor": "white",
          },
        ]
      }
      testID="selection-Completed"
    >
      <Text
        style={
          {
            "color": "black",
            "fontSize": 18,
          }
        }
      >
        Completed
      </Text>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      {
        "padding": 16,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 5,
          "marginHorizontal": 10,
          "padding": 15,
        },
        {
          "backgroundColor": "#EAB68F",
        },
      ]
    }
    testID="add-todo"
  >
    <Text
      style={
        {
          "color": "black",
          "fontSize": 20,
        }
      }
    >
      Add Todo
    </Text>
  </View>
</RCTSafeAreaView>
`;
